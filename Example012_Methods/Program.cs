// Вид 1
void method1(); //ключевое слово VOID, в скобках НЕТ аргументов
{
    Console.WriteLine("Автор ..."); // например в конце программы хотим указать свое авторство
}
// Как вызываются подобного рода методы:
// указать идентификатор этого метода для вызова метода
Method1();
//Method1; // - это ошибка

// Вид 2  - ничего не возвращают, но могут принимать какие-то аргументы
void Method2(string msg);
{
    Console.WriteLine(msg); // можем указывать операторы
}
// указать идентификатор этого метода и сообщения
Method2(msg: "Текст сообщения"); //

void Method21(string msg, int count)
{
    int i = 0;
    while (i < count)
    {
        Console.WriteLine(msg);
        i++;
    }
}
Method21(msg:"Текст", count: 4); //ВЫЗОВ НАШЕГО МЕТОДА, после запятой указываем, сколько раз хотим видеть данное сообщение. Также 
//можно явно указывать какому аргументу какон значение можем присвоить 
Method21(count: 4, msg:"Текст");//Если мы используем именованные аргументы то необязательно писать их по-порядку

// Вид 3  - что-то возвращают, но могут принимать какие-то аргументы
int Method3()
{
    return DateTime.Now.Year;
}
//        имя метода(идентификатор) 
int year = Method3();//используя идентефикатор переменной через оператор присваивания "=" положить нужное значение
Console.WriteLine(year); //в дальнейшем можно исп. эту переменную и то значение, которое нам вернул метод

//Вид 4 - что-то принимают и что-то возвращают, самая важная группа методов
string Method4(int count, string text); // Text компановать друг за другом count раз
{
    int i = 0; //цикл
    string result = String.Empty; //переменная куда мы будем класть конечный результат, значением будет являться пустая строка "", но лучше вместо этого написать String.Empty
    while (i < count)
    {
        result = result + text;
        i++;
    }
    return result;
}

string res = Method4(10, "asdf");
Console.WriteLine(res);

// пробуем то же самое но с циклом FOR
 
string Method4(int count, string text); 
{
    string result = String.Empty; //переменная куда мы будем класть конечный результат, значением будет являться пустая строка "", но лучше вместо этого написать String.Empty
    for (int i = 0; i < count; i++) // FOR (инициализация счетчика I; проверка условия I<COUNT; инкремент i++)
    {
        result = result + text;
    }
    return result;
}

string res = Method4(10, "asdf");
Console.WriteLine(res);